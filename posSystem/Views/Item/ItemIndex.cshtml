@model ItemResponseModel

@{
    ViewData["Title"] = "Item";
    int count = 0;
    int _pageNo = Model.pageNo;
    int _pageCount = Model.pageCount;
    int _pageSize = Model.pageSize;

    string _sortField = Model.sortField ?? "itemCode";
    string _sortOrder = Model.sortOrder ?? "asc";

    string _pageURL(int _pageNo, string _sortField, string _sortOrder)
    {
        return $"/Item/Index?pageNo={_pageNo}&pageSize={_pageSize}&sortField={_sortField}&sortOrder={_sortOrder}";
    }
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Items</h1>
    <a href="/Item/Create" class="btn btn-success">Add Item</a>
</div>

<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">#</th>
            @foreach (var column in new[] {
            new { Field = "itemCode", Title = "Item Code" },
            new { Field = "itemName", Title = "Item Name" },
            new { Field = "itemSalePrice", Title = "Price" },
            new { Field = "itemStock", Title = "Stock" },
            new { Field = "itemSold", Title = "Item Sold" },
            new { Field = "itemRemainStock", Title = "Remain Stock" },
            new { Field = "itemCategory", Title = "Category" },
            new { Field = "itemSubCategory", Title = "Sub Category" },
            new { Field = "itemBrand", Title = "Brand" },
            new { Field = "itemSubBrnad", Title = "Sub Brand" }
            })
            {
                <th scope="col">
                    <a href="@_pageURL(_pageNo, column.Field, _sortOrder == "asc" ? "desc" : "asc")">
                        @column.Title @(_sortField == column.Field ? (_sortOrder == "asc" ? "▲" : "▼") : "")
                    </a>
                </th>
            }
            <th scope="col">Item Barcode</th>
            <th scope="col">Create Date</th>
            <th scope="col">Update Date</th>
            <th scope="col">Action</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.itemData)
        {
            <tr>
                <th scope="row">@(++count + (_pageNo - 1) * _pageSize)</th>
                <td>@item.itemCode</td>
                <td>@item.itemName</td>
                <td>@item.itemSalePrice</td>
                <td>@item.itemStock</td>
                <td>@item.itemSold</td>
                <td>@item.itemRemainStock</td>
                <td>@item.itemCategory</td>
                <td>@item.itemSubCategory</td>
                <td>@item.itemBrand</td>
                <td>@item.itemSubBrnad</td>
                <td>@item.itemBarcode</td>
                <td>@item.itemCreateAt</td>
                <td>@item.itemUpdateAt</td>
                <td>
                    <a href="/Item/Edit?itemId=@item.itemId" class="btn btn-warning btn-sm">Edit</a>
                    <button type="button" class="btn btn-danger btn-sm btn-delete" data-id="@item.itemId">Delete</button>
                </td>
            </tr>
        }
    </tbody>

    <tfoot>
        <tr>
            <td colspan="15">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        @if (_pageNo > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@_pageURL(_pageNo - 1, _sortField, _sortOrder)" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">&laquo;</span>
                            </li>
                        }

                        @for (int i = 1; i <= _pageCount; i++)
                        {
                            if (i == _pageNo)
                            {
                                <li class="page-item active">
                                    <span class="page-link">@i</span>
                                </li>
                            }
                            else
                            {
                                <li class="page-item"><a class="page-link" href="@_pageURL(i, _sortField, _sortOrder)">@i</a></li>
                            }
                        }

                        @if (_pageNo < _pageCount)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@_pageURL(_pageNo + 1, _sortField, _sortOrder)" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">&raquo;</span>
                            </li>
                        }
                    </ul>
                </nav>
            </td>
        </tr>
    </tfoot>
</table>

@section scripts {
    <script>
        // Function to handle delete operation
        $(document).on('click', '.btn-delete', function () {
            let id = $(this).data('id');
            Swal.fire({
                title: "Confirm?",
                text: "You won't be able to revert this!",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteData(id);
                }
            });
        });

        // AJAX function to delete data
        function deleteData(itemId) {
            let _reqModel = {
                itemId: itemId
            };

            $.ajax({
                url: `/Item/Delete?itemId=${itemId}`,
                data: _reqModel,
                type: "POST",
                dataType: "json",
                success: function (result) {
                    console.log(result);
                    if (result.IsSuccess) {
                        let timerInterval;
                        Swal.fire({
                            title: "Deleting...",
                            html: "Please wait, saving in <b></b> milliseconds.",
                            timer: 1000,
                            timerProgressBar: true,
                            didOpen: () => {
                                Swal.showLoading();
                                const timer = Swal.getHtmlContainer().querySelector("b");
                                timerInterval = setInterval(() => {
                                    timer.textContent = Swal.getTimerLeft();
                                }, 100);
                            },
                            willClose: () => {
                                clearInterval(timerInterval);
                            }
                        }).then((result) => {
                            if (result.dismiss === Swal.DismissReason.timer) {
                                Swal.fire({
                                    title: "Deleted!",
                                    text: result.responseMessage,
                                    icon: "success",
                                }).then((result) => {
                                    location.reload();
                                });
                            }
                        });
                    }
                    else {
                        Swal.fire({
                            title: "Error!",
                            text: result.responeMessage,
                            icon: "error"
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                    Swal.fire({
                        title: "Error!",
                        text: "An error occurred while deleting.",
                        icon: "error"
                    });
                }
            });
        }
    </script>
}
