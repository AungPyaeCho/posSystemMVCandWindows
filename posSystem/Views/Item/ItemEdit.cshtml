@model ItemModel

@{
    var _categories = ViewBag.Categories as List<CategoryModel>;
    var _subCategories = ViewBag.SubCategories as List<SubCategoryModel>;
    var _brands = ViewBag.Brands as List<BrandModel>;
    var _subBrands = ViewBag.SubBrands as List<SubBrandModel>;
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-body">
                    <h2 class="card-title mb-4">Update Item</h2>

                    <div class="mb-3">
                        <label for="itemCode" class="form-label">Item Code</label>
                        <input type="text" class="form-control" id="itemCode" name="itemCode" value="@Model.itemCode">
                    </div>

                    <div class="mb-3">
                        <label for="itemName" class="form-label">Item Name</label>
                        <input type="text" class="form-control" id="itemName" name="itemName" value="@Model.itemName">
                    </div>

                    <div class="mb-3">
                        <label for="itemBuyPrice" class="form-label">Original Price</label>
                        <input type="number" class="form-control" id="itemBuyPrice" name="itemBuyPrice" placeholder="Enter original price" value="@Model.itemBuyPrice">
                    </div>

                    <div class="mb-3">
                        <label for="itemSalePrice" class="form-label">Item Sale Price</label>
                        <input type="number" class="form-control" id="itemSalePrice" name="itemSalePrice" placeholder="Enter item sale price" value="@Model.itemSalePrice">
                    </div>

                    <div class="mb-3">
                        <label for="itemWholeSalePrice" class="form-label">Item Whole Sale Price</label>
                        <input type="number" class="form-control" id="itemWholeSalePrice" name="itemWholeSalePrice" placeholder="Enter item whoel sale price" value="@Model.itemWholeSalePrice">
                    </div>

                    <div class="mb-3">
                        <label for="Category" class="form-label">Category</label>
                        <select class="form-control" id="catId" name="catId">
                            <option value="">Select a Category</option>
                            @foreach (var category in _categories)
                            {
                                <option value="@category.catId">@category.catName</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="Sub Category" class="form-label">SubCategory</label>
                        <select class="form-control" id="subCId" name="subCId">
                            <option value="">Select a Sub Category</option>
                            @foreach (var subCategory in _subCategories)
                            {
                                <option value="@subCategory.subCId">@subCategory.subCatName</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="brandId" class="form-label">Brand</label>
                        <select class="form-control" id="brandId" name="brandId">
                            <option value="">Select a Brand</option>
                            @foreach (var brand in _brands)
                            {
                                <option value="@brand.brandId">@brand.brandName</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="subBId" class="form-label">Sub Brand</label>
                        <select class="form-control" id="subBId" name="subBId">
                            <option value="">Select a Sub Brand</option>
                            @foreach (var subBrand in _subBrands)
                            {
                                <option value="@subBrand.subBId">@subBrand.subBrandName</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="itemDescription" class="form-label">Item Description</label>
                        <textarea class="form-control" id="itemDescription" name="itemDescription">@Model.itemDescription</textarea>
                    </div>

                    <div class="mb-3">
                        <label for="itemBarcode" class="form-label">Item Barcode</label>
                        <input type="text" class="form-control" id="itemBarcode" name="itemBarcode" value="@Model.itemBarcode">
                    </div>

                    <div class="mb-3">
                        <label for="itemStock" class="form-label">Item Stock</label>
                        <input type="number" class="form-control" id="itemStock" name="itemStock" value="@Model.itemStock">
                    </div>

                    <div class="mb-3">
                        <label for="creatorName" class="form-label">Creator Name</label>
                        <input type="text" class="form-control" id="creatorName" name="creatorName" value="@Model.creatorName">
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="/Item" class="btn btn-dark">Back</a>
                        <button type="button" id="btnUpdate" class="btn btn-success">Update Item</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            $('#btnUpdate').click(function () {
                let itemId = @Model.itemId;
                let itemCode = $('#itemCode').val();
                let itemName = $('#itemName').val();
                let itemBuyPrice = $('#itemBuyPrice').val();
                let itemSalePrice = $('#itemSalePrice').val();
                let itemWholeSalePrice = $('#itemWholeSalePrice').val();
                let catId = $('#catId').val();
                let subCId = $('#subCId').val();
                let brandId = $('#brandId').val();
                let subBId = $('#subBId').val();
                let itemDescription = $('#itemDescription').val();
                let itemBarcode = $('#itemBarcode').val();
                let itemStock = $('#itemStock').val();
                let creatorName = $('#creatorName').val();

                let _reqModel = {
                    itemId: itemId,
                    itemCode: itemCode,
                    itemName: itemName,
                    itemBuyPrice: itemBuyPrice,
                    itemSalePrice: itemSalePrice,
                    itemWholeSalePrice: itemWholeSalePrice,
                    catId: catId,
                    subCId: subCId,
                    brandId: brandId,
                    subBId: subBId,
                    itemDescription: itemDescription,
                    itemBarcode: itemBarcode,
                    itemStock: itemStock,
                    creatorName: creatorName
                };

                $.ajax({
                    url: "/Item/Update?itemId=" + itemId,
                    data: { itemModel: _reqModel },
                    type: "POST",
                    dataType: "json",
                    success: function (result) {
                        console.log(result);
                        if (result.IsSuccess) {
                            let timerInterval;
                            Swal.fire({
                                title: "Updating...",
                                html: "Please wait, saving in <b></b> milliseconds.",
                                timer: 1000,
                                timerProgressBar: true,
                                didOpen: () => {
                                    Swal.showLoading();
                                    const timer = Swal.getHtmlContainer().querySelector("b");
                                    timerInterval = setInterval(() => {
                                        timer.textContent = Swal.getTimerLeft();
                                    }, 100);
                                },
                                willClose: () => {
                                    clearInterval(timerInterval);
                                }
                            }).then((result) => {
                                if (result.dismiss === Swal.DismissReason.timer) {
                                    Swal.fire({
                                        title: "Success!",
                                        text: result.responseMessage,
                                        icon: "success",
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            location.href = "/Item";
                                        }
                                    });
                                }
                            });
                        }
                        else {
                            Swal.fire({
                                title: "Error!",
                                text: result.responeMessage,
                                icon: "error"
                            });
                        }
                    },
                    error: function (errormessage) {
                        console.log(errormessage.responseText);
                    }
                });
            });
        });
    </script>
}
