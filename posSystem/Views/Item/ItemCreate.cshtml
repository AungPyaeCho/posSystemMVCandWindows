@model ItemModel

@{
    var categories = ViewBag.Categories as List<CategoryModel>;
    var subCategories = ViewBag.SubCategories as List<SubCategoryModel>;
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-body">
                    <h5 class="card-title mb-4">Add Item</h5>

                    <div class="mb-3">
                        <label for="itemCode" class="form-label">Item Code</label>
                        <input type="text" class="form-control" id="itemCode" name="itemCode" placeholder="Enter item code">
                    </div>

                    <div class="mb-3">
                        <label for="itemName" class="form-label">Item Name</label>
                        <input type="text" class="form-control" id="itemName" name="itemName" placeholder="Enter item name">
                    </div>

                    <div class="mb-3">
                        <label for="itemPrice" class="form-label">Item Price</label>
                        <input type="number" class="form-control" id="itemPrice" name="itemPrice" placeholder="Enter item price">
                    </div>

                    <div class="mb-3">
                        <label for="catId" class="form-label">Category</label>
                        <select class="form-control" id="catId" name="catId">
                            <option value="">Select a category</option>
                            @foreach (var category in categories!)
                            {
                                <option value="@category.catId">@category.catName</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="subCId" class="form-label">Sub Category</label>
                        <select class="form-control" id="subCId" name="subCId">
                            <option value="">Select a sub category</option>
                            @foreach (var subCategory in subCategories!)
                            {
                                <option value="@subCategory.subCId">@subCategory.subCatName</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="itemDescription" class="form-label">Item Description</label>
                        <textarea class="form-control" id="itemDescription" name="itemDescription" rows="3" placeholder="Enter item description"></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="itemBarcode" class="form-label">Item Barcode</label>
                        <input type="text" class="form-control" id="itemBarcode" name="itemBarcode" placeholder="Enter item barcode">
                    </div>

                    <div class="mb-3">
                        <label for="itemStock" class="form-label">Item Stock</label>
                        <input type="number" class="form-control" id="itemStock" name="itemStock" placeholder="Enter item stock">
                    </div>

                    <div class="mb-3">
                        <label for="creatorName" class="form-label">Creator Name</label>
                        <input type="text" class="form-control" id="creatorName" name="creatorName" placeholder="Enter creator name">
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="/Item" class="btn btn-dark">Back</a>
                        <button type="button" id="btnSaveItem" class="btn btn-success">Save Item</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            $('#btnSaveItem').click(function () {
                let itemCode = $('#itemCode').val();
                let itemName = $('#itemName').val();
                let itemPrice = $('#itemPrice').val();
                let catId = $('#catId').val();
                let subCId = $('#subCId').val();
                let itemDescription = $('#itemDescription').val();
                let itemBarcode = $('#itemBarcode').val();
                let itemStock = $('#itemStock').val();
                let creatorName = $('#creatorName').val();

                let _reqModel = {
                    itemCode: itemCode,
                    itemName: itemName,
                    itemPrice: itemPrice,
                    catId: catId,
                    subCId: subCId,
                    itemDescription: itemDescription,
                    itemBarcode: itemBarcode,
                    itemStock: itemStock,
                    creatorName: creatorName
                };

                $.ajax({
                    url: "/Item/Save",
                    data: { itemModel: _reqModel },
                    type: "POST",
                    dataType: "json",
                    success: function (result) {
                        console.log(result);
                        if (result.IsSuccess) {
                            let timerInterval;
                            Swal.fire({
                                title: "Saving...",
                                html: "Please wait, saving in <b></b> milliseconds.",
                                timer: 1000,
                                timerProgressBar: true,
                                didOpen: () => {
                                    Swal.showLoading();
                                    const timer = Swal.getHtmlContainer().querySelector("b");
                                    timerInterval = setInterval(() => {
                                        timer.textContent = Swal.getTimerLeft();
                                    }, 100);
                                },
                                willClose: () => {
                                    clearInterval(timerInterval);
                                }
                            }).then((result) => {
                                if (result.dismiss === Swal.DismissReason.timer) {
                                    Swal.fire({
                                        title: "Success!",
                                        text: result.responseMessage,
                                        icon: "success",
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            location.href = "/Item";
                                        }
                                    });
                                }
                            });
                        }
                        else {
                            Swal.fire({
                                title: "Error!",
                                text: result.responeMessage,
                                icon: "error"
                            });
                        }
                    },
                    error: function (errormessage) {
                        console.log(errormessage.responseText);
                    }
                });
            });
        });
    </script>
}
