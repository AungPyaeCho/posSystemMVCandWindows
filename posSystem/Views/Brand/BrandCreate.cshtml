@model BrandModel
@{

}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-body">
                    <h5 class="card-title mb-4">Add Brand</h5>

                    <div class="mb-3">
                        <label for="brandName" class="form-label">Brand Name</label>
                        <input type="text" class="form-control" id="brandName" name="brandName" placeholder="Enter brand name">
                    </div>

                    <div class="mb-3">
                        <label for="brandCode" class="form-label">Brand Code</label>
                        <input type="text" class="form-control" id="brandCode" name="brandCode" placeholder="Enter brand code">
                        <span asp-validation-for="brandCode" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label for="brandDescription" class="form-label">Brand Description</label>
                        <textarea class="form-control" id="brandDescription" name="brandDescription" rows="3" placeholder="Enter brand description"></textarea>
                    </div>

                    <div class="d-grid gap-2">
                        <button type="button" id="btnSave" class="btn btn-success">Save Brand</button>
                        <a href="/Brand" class="btn btn-dark mt-2">Back</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $('#btnSave').click(function () {
            let brandName = $('#brandName').val();
            let brandCode = $('#brandCode').val();
            let brandDescription = $('#brandDescription').val();

            let _reqModel = {
                brandName: brandName,
                brandCode: brandCode,
                brandDescription: brandDescription
            };

            $.ajax({
                url: "/Brand/Save",
                data: { brandModel: _reqModel },
                type: "POST",
                dataType: "json",
                success: function (result) {
                    console.log(result);
                    if (result.IsSuccess) {
                        let timerInterval;
                        Swal.fire({
                            title: "Saving...",
                            html: "Please wait, saving in <b></b> milliseconds.",
                            timer: 1000,
                            timerProgressBar: true,
                            didOpen: () => {
                                Swal.showLoading();
                                const timer = Swal.getHtmlContainer().querySelector("b");
                                timerInterval = setInterval(() => {
                                    timer.textContent = Swal.getTimerLeft();
                                }, 100);
                            },
                            willClose: () => {
                                clearInterval(timerInterval);
                            }
                        }).then((result) => {
                            if (result.dismiss === Swal.DismissReason.timer) {
                                Swal.fire({
                                    title: "Success!",
                                    text: result.responseMessage,
                                    icon: "success",
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        location.href = "/Brand";
                                    }
                                });
                            }
                        });
                    }
                    else {
                        Swal.fire({
                            title: "Error!",
                            text: result.responseMessage,
                            icon: "error"
                        });
                    }
                },
                error: function (errormessage) {
                    console.log(errormessage.responseText);
                }
            });
        });
    </script>
}